{"version":3,"file":"static/js/335.3c601e9c.chunk.js","mappings":"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","sources":["components/GoogleSignin.js","components/Login.js","../node_modules/react-bootstrap/esm/Alert.js"],"sourcesContent":["import { signInWithRedirect, GoogleAuthProvider, getRedirectResult } from \"firebase/auth\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { auth, provider } from \"../firebase-config\"\r\n\r\n\r\n\r\nexport default function GoogleSignin({ addExtraUserInfo, setErrMsg }) {\r\n\r\n    const signin = () => {\r\n        signInWithRedirect(auth, provider);\r\n    }\r\n    getRedirectResult(auth)\r\n        .then((result) => {\r\n            if (!result) return\r\n\r\n            // This gives you a Google Access Token. You can use it to access Google APIs.\r\n            const credential = GoogleAuthProvider.credentialFromResult(result);\r\n            const token = credential.accessToken;\r\n            // The signed-in user info.\r\n            const user = result.user;\r\n            const newUser = {\r\n                uid: user.uid,\r\n                name: user.displayName\r\n            }\r\n            addExtraUserInfo(newUser)\r\n\r\n        }).catch((error) => {\r\n            const errorCode = error.code;\r\n            const errorMessage = error.message;\r\n            console.log(errorMessage)\r\n            setErrMsg(errorMessage)\r\n            const credential = GoogleAuthProvider.credentialFromError(error);\r\n        });\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <button className=\"btn btn-secondary btn-lg\" style={{ backgroundColor: \"White\", color: \"black\" }} onClick={() => signin()}>Google</button>\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from \"react\"\r\nimport React from \"react\"\r\nimport Alert from \"react-bootstrap/esm/Alert\"\r\nimport FloatingLabel from 'react-bootstrap/esm/FloatingLabel';\r\nimport Form from 'react-bootstrap/esm/Form';\r\nimport GoogleSignin from \"./GoogleSignin\";\r\n\r\n// Firebase\r\nimport { doc, getDoc } from \"firebase/firestore\"\r\nimport { onAuthStateChanged, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { db, auth } from \"../firebase-config\"\r\n\r\n// TODO: add hashing for passwords\r\n\r\nconst Login = ({ nav, addExtraUserInfo }) => {\r\n    // const [user, setUser] = useState({})\r\n\r\n    useEffect(() => {\r\n        onAuthStateChanged(auth, async (user) => {\r\n            if (user) return nav(\"/tasks\")\r\n        })\r\n    }, [])\r\n\r\n    const [loginData, setLoginData] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    })\r\n    // const [loginVal, setLoginVal] = useState(\"\")\r\n    const [loginErr, setLoginErr] = useState()\r\n\r\n    // useEffect(() => {\r\n    //     if (user) {\r\n    //         nav(\"/tasks\")\r\n    //     }\r\n    // })\r\n\r\n    const login = async (e) => {\r\n        e.preventDefault()\r\n        if (loginData.email === \"\" || loginData.password === \"\") {\r\n            return setLoginErr(\"Please fill in all fields.\")\r\n        }\r\n        signInWithEmailAndPassword(auth, loginData.email, loginData.password)\r\n            .then()\r\n            .catch((error) => {\r\n                const errorCode = error.code;\r\n                const errorMessage = error.message;\r\n                setLoginErr(errorMessage)\r\n            });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container py-5 \">\r\n            <div className=\"row d-flex align-items-center justify-content-center \">\r\n                <div className=\"col-md-7 col-lg-5 col-xl-5 offset-xl-1\">\r\n                    <h1 className=\"mb-5 text-center\">Login</h1>\r\n                    <form onSubmit={(e) => login(e)}>\r\n                        {/* {loginVal && <Alert variant=\"danger\">{loginVal}</Alert>} */}\r\n                        {loginErr && <Alert variant=\"danger\">{loginErr}</Alert>}\r\n                        {/* <!-- Email input --> */}\r\n                        <FloatingLabel controlId=\"email\" label=\"Email\" className=\"mb-3\">\r\n                            <Form.Control type=\"email\" onChange={e => setLoginData({ ...loginData, email: e.target.value })} />\r\n                        </FloatingLabel>\r\n\r\n                        {/* <!-- Password input --> */}\r\n                        <FloatingLabel controlId=\"password\" label=\"Password\" className=\"mb-3\">\r\n                            <Form.Control type=\"password\" onChange={e => setLoginData({ ...loginData, password: e.target.value })} />\r\n                        </FloatingLabel>\r\n\r\n                        <div className=\"d-flex justify-content-around align-items-center mb-4\">\r\n                            {/* <!-- Checkbox --> */}\r\n                            <div className=\"form-check\">\r\n                                <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"form1Example3\" />\r\n                                <label className=\"form-check-label\" htmlFor=\"form1Example3\"> Remember me </label>\r\n                            </div>\r\n                            <a href=\"#!\">Forgot password?</a>\r\n                        </div>\r\n\r\n                        <div className=\"d-grid\">\r\n                            <button type=\"submit\" className=\"btn btn-primary btn-lg btn-block\" >Sign in</button>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"d-grid\">\r\n                        <div className=\"divider align-items-center my-4\">\r\n                            <p className=\"text-center fw-bold mx-3 mb-0 text-muted \">OR</p>\r\n                        </div>\r\n                        <GoogleSignin addExtraUserInfo={addExtraUserInfo} setErrMsg={setLoginErr} />\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-around align-items-center my-4\">\r\n                        Don't have an account yet? &nbsp;\r\n                        <a href=\"/register\">Register</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport divWithClassName from './divWithClassName';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nconst AlertLink = createWithBsPrefix('alert-link', {\n  Component: Anchor\n});\nconst defaultProps = {\n  variant: 'primary',\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show,\n    closeLabel,\n    closeVariant,\n    className,\n    children,\n    variant,\n    onClose,\n    dismissible,\n    transition,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});"],"names":["GoogleSignin","addExtraUserInfo","setErrMsg","getRedirectResult","auth","then","result","GoogleAuthProvider","accessToken","user","newUser","uid","name","displayName","catch","error","code","errorMessage","message","console","log","useEffect","className","style","backgroundColor","color","onClick","signInWithRedirect","provider","nav","onAuthStateChanged","useState","email","password","loginData","setLoginData","loginErr","setLoginErr","login","e","preventDefault","signInWithEmailAndPassword","onSubmit","variant","controlId","label","type","onChange","target","value","id","htmlFor","href","DivStyledAsH4","divWithClassName","AlertHeading","createWithBsPrefix","Component","AlertLink","Anchor","defaultProps","show","transition","Fade","closeLabel","Alert","React","uncontrolledProps","ref","useUncontrolled","bsPrefix","closeVariant","children","onClose","dismissible","props","prefix","useBootstrapPrefix","handleClose","useEventCallback","Transition","alert","_jsxs","role","undefined","classNames","_jsx","CloseButton","unmountOnExit","in","Object","assign","Link","Heading"],"sourceRoot":""}