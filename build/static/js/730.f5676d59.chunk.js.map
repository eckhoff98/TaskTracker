{"version":3,"file":"static/js/730.f5676d59.chunk.js","mappings":"4PAkFA,UAtEA,SAAgB,GAAa,IAAXA,EAAM,EAANA,OACd,GAAwBC,EAAAA,EAAAA,UAAS,MAAK,eAA/BC,EAAI,KAAEC,EAAO,MAEpBC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAmBC,EAAAA,GAAI,yCAAE,WAAOJ,GAAI,8EACC,GAAjCK,QAAQC,IAAI,sBACPN,EAAK,CAAD,wCAASC,EAAQ,OAAK,OACU,OAAnCM,GAASC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,QAAST,EAAKU,KAAK,EAAD,QACnBC,EAAAA,EAAAA,IAAOJ,GAAO,OAA9BK,EAAO,OACbZ,EAAKa,UAAYD,EAAQE,OACzBb,EAAQD,GAAK,2CAChB,mDAPsB,GAQ3B,GAAG,IAEH,IAAMe,EAAgB,WAClB,OAAIf,GAEI,+BACI,UAAC,IAAW,CAACgB,MAAOhB,EAAKa,UAAYb,EAAKa,UAAUI,KAAOjB,EAAKkB,MAAOC,GAAG,0BAAyB,WAC/F,SAAC,SAAgB,CAACC,SAAS,IAAIC,GAAIC,EAAAA,GAAMC,GAAG,WAAU,SAAC,aACvD,SAAC,YAAmB,KACpB,SAAC,SAAgB,CAACH,SAAS,IAAIC,GAAIC,EAAAA,GAAMC,GAAG,IAAIC,QAAS,WAAQ1B,GAAS,EAAE,SAAC,iBAMrF,iCACI,SAAC,SAAQ,CAACsB,SAAS,IAAIC,GAAIC,EAAAA,GAAMC,GAAG,SAAQ,SAAC,WAC7C,SAAC,SAAQ,CAACH,SAAS,IAAIC,GAAIC,EAAAA,GAAMC,GAAG,YAAW,SAAC,eAIhE,EACA,OACI,SAAC,IAAM,CAACE,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,OAAM,UACzD,UAAC,IAAS,YACN,SAAC,UAAY,WACT,SAAC,SAAQ,CAACR,SAAS,KAAKC,GAAIC,EAAAA,GAAMC,GAAG,IAAG,SAAC,oBAE7C,SAAC,WAAa,CAAC,gBAAc,2BAC7B,UAAC,aAAe,CAACJ,GAAG,wBAAuB,WACvC,UAAC,IAAG,CAACU,UAAU,UAAS,WACpB,SAAC,SAAQ,CAACT,SAAS,IAAIC,GAAIC,EAAAA,GAAMC,GAAG,SAAQ,SAAC,WAC7C,SAAC,SAAQ,CAACH,SAAS,IAAIC,GAAIC,EAAAA,GAAMC,GAAG,SAAQ,SAAC,cAiBjD,SAAC,IAAG,WACA,SAACR,EAAa,aAMtC,C","sources":["components/NavBar.js"],"sourcesContent":["import Container from 'react-bootstrap/esm/Container';\r\nimport Nav from 'react-bootstrap/esm/Nav';\r\nimport Navbar from 'react-bootstrap/esm/Navbar';\r\nimport NavDropdown from 'react-bootstrap/esm/NavDropdown';\r\nimport { Link } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\n\r\n// Firebase\r\nimport { doc, getDoc } from \"firebase/firestore\"\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { db, auth } from \"../firebase-config\"\r\n\r\nfunction NavBar({ logout }) {\r\n    const [user, setUser] = useState(null)\r\n\r\n    useEffect(() => {\r\n        onAuthStateChanged(auth, async (user) => {\r\n            console.log(\"onAuthStateChanged\")\r\n            if (!user) return setUser(null)\r\n            const docRef = doc(db, \"users\", user.uid);\r\n            const docSnap = await getDoc(docRef)\r\n            user.extraInfo = docSnap.data()\r\n            setUser(user)\r\n        })\r\n    }, [])\r\n\r\n    const LoginRegister = () => {\r\n        if (user) {\r\n            return (\r\n                <>\r\n                    <NavDropdown title={user.extraInfo ? user.extraInfo.name : user.email} id=\"collasible-nav-dropdown\" >\r\n                        <NavDropdown.Item eventKey=\"6\" as={Link} to=\"/account\">Account</NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item eventKey=\"7\" as={Link} to=\"/\" onClick={() => { logout() }}>Logout</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                </>\r\n            )\r\n        } else {\r\n            return (\r\n                <>\r\n                    <Nav.Link eventKey=\"1\" as={Link} to=\"/login\">Login</Nav.Link>\r\n                    <Nav.Link eventKey=\"2\" as={Link} to=\"/register\">Register</Nav.Link>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Container>\r\n                <Navbar.Brand >\r\n                    <Nav.Link eventKey=\"10\" as={Link} to=\"/\">Task Tracker</Nav.Link>\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        <Nav.Link eventKey=\"3\" as={Link} to=\"/tasks\">Tasks</Nav.Link>\r\n                        <Nav.Link eventKey=\"4\" as={Link} to=\"/about\">About</Nav.Link>\r\n\r\n                        {/* Example code */}\r\n                        {/* <Nav.Link eventKey=\"5\" as={Link} to=\"/more\">More stuff</Nav.Link>\r\n                        <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.2\">\r\n                                Another action\r\n                            </NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item href=\"#action/3.4\">\r\n                                Separated link\r\n                            </NavDropdown.Item>\r\n                        </NavDropdown> */}\r\n\r\n                    </Nav>\r\n                    <Nav>\r\n                        <LoginRegister />\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default NavBar;"],"names":["logout","useState","user","setUser","useEffect","onAuthStateChanged","auth","console","log","docRef","doc","db","uid","getDoc","docSnap","extraInfo","data","LoginRegister","title","name","email","id","eventKey","as","Link","to","onClick","collapseOnSelect","expand","bg","variant","className"],"sourceRoot":""}